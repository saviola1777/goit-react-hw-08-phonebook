{"version":3,"file":"static/js/185.7c170adc.chunk.js","mappings":"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","sources":["webpack://react-homework-08-phonebook/./src/components/Cointeiner/Cointeiner.module.css?0b8f","components/Cointeiner/Cointeiner.jsx","webpack://react-homework-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/Contacts/contacts-selector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","Redux/Filter/filter-selector.js","components/ContactList/ContactList.jsx","webpack://react-homework-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cointeiner\":\"Cointeiner_cointeiner__CcW5D\"};","import css from \"components/Cointeiner/Cointeiner.module.css\"\nconst Cointeiner =({children})=>{\n  return(\n    <div className={css.cointeiner}>{children}</div>\n  )\n}\n\nexport default Cointeiner","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"name\":\"ContactForm_name__ZqciK\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\nexport const allContact = state => state.contacts.items\n\nexport const allFilter=store=>store.filter\n\nexport const getFilteredContact = createSelector([allContact  , allFilter], (contacts , filter) => {\n   if (!filter) return contacts;\n   const normalizedFilter = filter.toLocaleLowerCase();\n   const result = contacts.filter(({ name }) => {\n     return (name.toLocaleLowerCase().includes(normalizedFilter))\n   })\n   return result\n })\n\n\n","import { useSelector, useDispatch} from \"react-redux\";    // імпортуємо компонент провайдер який дає доступ до глобального стану\nimport css from \"components/ContactForm/ContactForm.module.css\"\n\nimport {allContact} from '../../Redux/Contacts/contacts-selector'\nimport* as actions from '../../Redux/Contacts/contacts-operations' \n \nconst ContactForm =()=>{  \nconst contacts = useSelector(allContact) \nconst dispatch= useDispatch()\nconsole.log(contacts)\n\n const onHendleSubmit = (e) => {\n  e.preventDefault();\n  const name = e.currentTarget.name.value\n  const number = e.currentTarget.number.value\n\n    dispatch(actions.fetchAddContacts({ name, number}))     // а екшен наш обєкт яка приймає імя і номер і записує дані в пейлоад повертає обєкт який потрапляє в диспач і він запихає в\n    \n     e.currentTarget.reset();\n   }\n\n                           \n   \n    return (\n\n      <div className={css.wrapper}>\n        <form onSubmit={onHendleSubmit} className={css.form}>\n          <label className={css.name}> Name\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              // value={filter}\n\n            /> </label>\n          <label className={css.name}>Number\n            <input\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              // value={filter}\n            />\n          </label>\n          <button className={css.button} type=\"submit\">Add contact</button>\n\n        </form>\n      </div>\n    )\n\n}\n\n\nexport default ContactForm;\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactButton\":\"ContactList_contactButton__QiycO\"};","export const getFilter = store => store.filter;\n\nexport const getfiteredContacts = (filter, contacts) => {\n  const normalizedFilter = filter.toLocaleLowerCase().trim();\n  return contacts.filter(({ name }) => {\n     return (name.toLocaleLowerCase().includes(normalizedFilter))\n   })\n  }\n","import css from \"components/ContactList/ContactList.module.css\";\nimport { useEffect } from \"react\";\n\nimport * as actions from '../../Redux/Contacts/contacts-operations'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allContact} from '../../Redux/Contacts/contacts-selector'\nimport { getFilter , getfiteredContacts} from '../../Redux/Filter/filter-selector'\n\nconst ContactList = () => {\n\n  const contacts = useSelector(allContact)\n  const filter = useSelector(getFilter);\n  const fiteredContacts = getfiteredContacts(filter, contacts);\n  console.log('contacts', contacts)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(actions.fetchAllContacts())  // викликаємо операцію в діспатч v\n  }, [dispatch])\n\n\n  const deleteContact = id => {\n    dispatch(actions.fetchDeleteContacts(id))\n  }\n\n  const contactList = fiteredContacts.map(({ id, name, number }) =>\n    <li className={css.contactItem} key={id}>\n      <p className={css.contactSpan}>{name}</p><p className={css.contactSpam}>{number}</p>\n      <button className={css.contactButton} type=\"button\" onClick={() => deleteContact(id)}>delete</button></li>)\n\n  return (\n\n    <ol className={css.contactList}>{contactList}</ol>\n\n  )\n}\n\nexport default ContactList\n\n\n// тут фсю логіку ми робили в експортованій функці  {getFilteredContact} 'Redux/Contacts/contacts-selector'\n// ми визвали useSelector який дає доступ до глобального стейту і передали функцію яка має доступ до всії контактів і фільтрів якщо фільтр пустий вона повнртає всі контакти з глобального стейту б якшо ні то фільтрує по імені і повертає ті контакти одфільтровані і ми перебираємо і одмалювуємо всі контакти якшо шукаємо по фільтру воно одмалює одфільтровані контакти ","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_filterWrapper__ohvAm\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from 'components/Filter/Filter.module.css'\n\n import { useDispatch} from \"react-redux\";\n import { setFilter } from \"Redux/Filter/filter-slice\"\nconst Filter=()=>{\n\n  const dispatch =useDispatch()\n  const onHendleFilter = ({ target }) => {\n    const action= setFilter(target.value)\n    dispatch(action)\n    console.log(action)\n  }\n  return  (\n<div className={css.filterWrapper}>\n\t\t\t<label className={css.label}>Find contacts by name\n\t\t\t<input className={css.input} type='text' name='filter' onChange={onHendleFilter}/>\n      </label>\n      \n\t\t</div>\n\n  )\n}\n\nexport default Filter","\nimport Cointeiner from 'components/Cointeiner/Cointeiner';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\n// import { useSelector} from 'react-redux';\n// import { isUserLogin } from 'Redux/Auth/auth-selectot';\n\nconst HomePage = () => {\n  // const isLoading = useSelector(isUserLogin)\n  return (\n\n<Cointeiner>\n      <h2>phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter  />\n      <ContactList />\n    </Cointeiner>\n\n  )\n}\nexport default HomePage"],"names":["children","className","css","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","allContact","state","contacts","items","store","filter","normalizedFilter","toLocaleLowerCase","includes","useSelector","dispatch","useDispatch","console","log","onSubmit","e","preventDefault","currentTarget","number","actions","reset","type","pattern","title","required","getFilter","fiteredContacts","trim","getfiteredContacts","useEffect","contactList","id","onClick","deleteContact","onChange","target","action","setFilter"],"sourceRoot":""}