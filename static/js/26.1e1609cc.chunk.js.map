{"version":3,"file":"static/js/26.1e1609cc.chunk.js","mappings":"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","sources":["modules/RegisterForm/initialState.js","modules/RegisterForm/field.js","webpack://react-homework-08-phonebook/./src/modules/RegisterForm/RegisterForm.module.css?281d","modules/RegisterForm/RegisterForm.jsx","webpack://react-homework-08-phonebook/./src/Pages/RegisterPage/RegisterPage.module.css?b8e2","Pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-08-phonebook/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-08-phonebook/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hook/useForm.jsx"],"sourcesContent":["const initialState ={\n   name: \"\",\n   email:\"\",\n   password:\"\",\n}\n\nexport default initialState","const field={\n   name:{\n      type:'text',\n      name:'name',\n      required:true,\n      label:'User name',\n      placeholder:'User name',\n   },\n   email:{\n      type:'email',\n      name:'email',\n      required:true,\n      label:'User email',\n      placeholder:'User email',\n   },\n   password:{\n      type:'password',\n      name:'password',\n      required:true,\n      label:'User password',\n      placeholder:'User password',\n   },\n}\n\nexport default field","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Rm9pY\"};","import useForm from \"shared/hook/useForm\"\n\nimport initialState from '../RegisterForm/initialState'\n\nimport TextField from \"shared/components/TextField/TextField\"\nimport Button from \"shared/components/Button/Button\"\n\nimport field from \"./field\"\n\nimport css from './RegisterForm.module.css'\n\nconst RegisterForm=({onSubmit}) =>{\nconst {state,  handleChange, handleSubmit} = useForm({initialState, onSubmit})\nconsole.log(state)\n\nreturn(\n   <form onSubmit={handleSubmit} className={css.form}>\n      <TextField  handleChange={handleChange} {...field.name}/>\n      <TextField  handleChange={handleChange}  {...field.email}/>\n      <TextField  handleChange={handleChange} {...field.password}/>\n      <Button type=\"submit\">Register</Button>\n   </form>\n)\n}\n\nexport default RegisterForm","// extracted by mini-css-extract-plugin\nexport default {\"wrapperRegisterPage\":\"RegisterPage_wrapperRegisterPage__5V9tD\"};","import RegisterForm from \"modules/RegisterForm/RegisterForm\"\nimport css from './RegisterPage.module.css'\n\nimport { Navigate } from \"react-router-dom\";            // це коипонент який використовується прри переадресації\n\nimport { isUserLogin } from 'Redux/Auth/auth-selectot';\n\nimport { useDispatch , useSelector } from \"react-redux\"\nimport { signupApi } from \"Redux/Auth/auth-operations\"\n\nconst RegisterPage = ()=>{\n   const isLogin = useSelector(isUserLogin ) \n   const dispath = useDispatch ()\n  \n   const handleSignup = (data)=>{\n   dispath(signupApi(data))\n   }\n\n   if(isLogin){                //якщо ллюдина зареєстровання isLoading=true то перекидає на сторінку яку я пишу в навігації\n      return <Navigate to=\"/\"/>       \n         }\n\n   return(\n      <div className={css.wrapperRegisterPage}> \n      <RegisterForm onSubmit={handleSignup}/>\n      </div>\n   )\n}\n\nexport default RegisterPage","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__urlvE\"};","import css from './Button.module.css'\n\nconst Button = ({children , type='submit'})=>{\n\n   return(\n      <button type={type} className={css.button}>{children}</button>\n   )\n}\n\nexport default Button","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"input\":\"TextField_input__Oi20a\",\"label\":\"TextField_label__PQj1k\"};","import { useMemo } from \"react\"\nimport { nanoid } from \"nanoid\"\nimport css from './TextField.module.css'\n\nconst TextField = ({label , handleChange , ...props})=>{\n const id =useMemo(()=>nanoid(),[])\n   return (\n   <div className={css.wrapper}>\n      <label className={css.label} htmlFor={id}>{label}</label>\n      <input className={css.input} id={id} onChange={handleChange} {...props}/>\n   </div>\n )\n}\nexport default TextField\n\n// це наша форма куди ми передаємо назву лейбла функцію при змні поля і пропси і імпортуємо у форму \n// { useMemo щоб не геренувати завжли id це функція яка запмятовує результат і міняє тільки тоді коли треба","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n \n\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n    e.currentTarget.reset();\n  \n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;"],"names":["name","email","password","type","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","console","log","className","css","TextField","field","Button","isLogin","useSelector","isUserLogin","dispath","useDispatch","to","data","signupApi","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","useState","setState","useCallback","value","prevState","e","preventDefault","currentTarget","reset"],"sourceRoot":""}